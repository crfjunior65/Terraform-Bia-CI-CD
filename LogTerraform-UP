/home/junior/Dados/FormacaoAWS/Terraform/1-VPC

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.vpc.aws_db_subnet_group.database[0][0m will be created
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "database" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m description             = "Database subnet group for Formacao_AWS-vpc"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "formacao_aws-vpc"
      [32m+[0m[0m name_prefix             = (known after apply)
      [32m+[0m[0m subnet_ids              = (known after apply)
      [32m+[0m[0m supported_network_types = (known after apply)
      [32m+[0m[0m tags                    = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "formacao_aws-vpc"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "formacao_aws-vpc"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                  = (known after apply)
    }

[1m  # module.vpc.aws_default_network_acl.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_network_acl" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_network_acl_id = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-default"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-default"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m egress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m ipv6_cidr_block = "::/0"
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 101
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
      [32m+[0m[0m egress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m cidr_block      = "0.0.0.0/0"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 100
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m ingress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m ipv6_cidr_block = "::/0"
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 101
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
      [32m+[0m[0m ingress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m cidr_block      = "0.0.0.0/0"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 100
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.vpc.aws_default_route_table.default[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_route_table" "default" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_route_table_id = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m route                  = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-default"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-default"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
          [32m+[0m[0m update = "5m"
        }
    }

[1m  # module.vpc.aws_default_security_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = (known after apply)
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-default"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-default"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.vpc.aws_internet_gateway.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "this" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.vpc.aws_route.public_internet_gateway[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "public_internet_gateway" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m gateway_id             = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
        }
    }

[1m  # module.vpc.aws_route_table.database[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "database" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-db-us-east-1a"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-db-us-east-1a"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table.database[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "database" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-db-us-east-1b"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-db-us-east-1b"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table.database[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "database" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-db-us-east-1c"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-db-us-east-1c"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-private-us-east-1a"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-private-us-east-1a"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-private-us-east-1b"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-private-us-east-1b"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-private-us-east-1c"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-private-us-east-1c"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-public"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc-public"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.database[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "database" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.database[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "database" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.database[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "database" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_subnet.database[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "database" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.21.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-DataBase"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-DataBase"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.database[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "database" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.22.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-DataBase"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-DataBase"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.database[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "database" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.23.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-DataBase"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-DataBase"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.201.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-privada"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-privada"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.202.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-privada"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-privada"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.203.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-privada"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-privada"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.101.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-public"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-public"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.102.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-public"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-public"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.103.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-public"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "SubNet-public"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_vpc.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "this" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.20.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Formacao_AWS-vpc"
          [32m+[0m[0m "Terraform"   = "true"
        }
    }

[1mPlan:[0m 32 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m vpc_azs_id                      = [
      [32m+[0m[0m "us-east-1a",
      [32m+[0m[0m "us-east-1b",
      [32m+[0m[0m "us-east-1c",
    ]
  [32m+[0m[0m vpc_database_subnet_arns        = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m vpc_db_subnet_grp_name          = "formacao_aws-vpc"
  [32m+[0m[0m vpc_name                        = "Formacao_AWS-vpc"
  [32m+[0m[0m vpc_private_subnets_cidr_blocks = [
      [32m+[0m[0m "10.20.201.0/24",
      [32m+[0m[0m "10.20.202.0/24",
      [32m+[0m[0m "10.20.203.0/24",
    ]
  [32m+[0m[0m vpc_private_subnets_id          = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m vpc_public_subnets_cidr_blocks  = [
      [32m+[0m[0m "10.20.101.0/24",
      [32m+[0m[0m "10.20.102.0/24",
      [32m+[0m[0m "10.20.103.0/24",
    ]
  [32m+[0m[0m vpc_public_subnets_id           = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m vpc_vpc_cidr_block              = "10.20.0.0/16"
  [32m+[0m[0m vpc_vpc_id                      = (known after apply)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: plan.out

To perform exactly these actions, run the following command to apply:
    terraform apply "plan.out"
/home/junior/Dados/FormacaoAWS/Terraform/1a-SegGroup
[0m[1mdata.terraform_remote_state.vpc: Reading...[0m[0m
[0m[1mdata.terraform_remote_state.vpc: Read complete after 3s[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_security_group.bia-alb[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "bia-alb" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "bia-alb"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "bia-alb"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "Acesso_ALB Porta 80 e 443"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "Bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Acesso_ALB Porta 80 e 443"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                 = "vpc-0abc0e8443c940136"
    }

[1m  # aws_security_group.bia-db[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "bia-db" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "bia-db"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m from_port        = 5432
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 5432
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "bia-db"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "Acesso_PostGres Porta 5432"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "Bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Acesso_PostGres Porta 5432"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                 = "vpc-0abc0e8443c940136"
    }

[1m  # aws_security_group.bia-dev[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "bia-dev" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "bia-dev"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 3001
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 3001
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "bia-dev"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "Acesso_HTTP Porta 3001"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "Bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Acesso_HTTP Porta 3001"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                 = "vpc-0abc0e8443c940136"
    }

[1m  # aws_security_group.bia-ec2[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "bia-ec2" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "bia-ec2"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 65535
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "bia-ec2"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "Acesso_ECS - EC2"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "Bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Acesso_ECS - EC2"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                 = "vpc-0abc0e8443c940136"
    }

[1m  # aws_security_group.bia-web[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "bia-web" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "bia-web"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "bia-web"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "Acesso_HTTP Porta 80 e 443"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "Bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Acesso_HTTP Porta 80 e 443"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                 = "vpc-0abc0e8443c940136"
    }

[1mPlan:[0m 5 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m sg_bia_alb = (known after apply)
  [32m+[0m[0m sg_bia_db  = (known after apply)
  [32m+[0m[0m sg_bia_dev = (known after apply)
  [32m+[0m[0m sg_bia_ec2 = (known after apply)
  [32m+[0m[0m sg_bia_web = (known after apply)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: plan.out

To perform exactly these actions, run the following command to apply:
    terraform apply "plan.out"
/home/junior/Dados/FormacaoAWS/Terraform/1b-IAM
[0m[1mdata.aws_availability_zones.available_zones: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_iam_policy_document.instance_assume_role_policy: Reading...[0m[0m
[0m[1mdata.aws_iam_policy_document.instance_assume_role_policy: Read complete after 0s [id=2851119427][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=390403858393][0m
[0m[1mdata.aws_availability_zones.available_zones: Read complete after 0s [id=us-east-1][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_iam_instance_profile.ecs_instance_profile[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "ecs_instance_profile" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "ecs-instance-profile"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m role        = "ecs-instance-role"
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Owner"       = "Junior_Fernandes"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m unique_id   = (known after apply)
    }

[1m  # aws_iam_instance_profile.s3_profile[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "s3_profile" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "ec2-s3-profile"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m role        = "ec2-s3-role"
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Owner"       = "Junior_Fernandes"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m unique_id   = (known after apply)
    }

[1m  # aws_iam_instance_profile.ssm_profile[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "ssm_profile" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "ec2-ssm-profile"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m role        = "ec2-ssm-role"
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Owner"       = "Junior_Fernandes"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m unique_id   = (known after apply)
    }

[1m  # aws_iam_role.ec2_s3_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ec2_s3_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "ec2-s3-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Owner"       = "Junior_Fernandes"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # aws_iam_role.ecs_instance_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ecs_instance_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "ecs-instance-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Owner"       = "Junior_Fernandes"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # aws_iam_role.ssm_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ssm_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "ec2-ssm-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Environment" = "Projeto-bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Owner"       = "Junior_Fernandes"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # aws_iam_role_policy_attachment.ecr_full_access[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ecr_full_access" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
      [32m+[0m[0m role       = "ec2-ssm-role"
    }

[1m  # aws_iam_role_policy_attachment.ecs_full_access[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ecs_full_access" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonECS_FullAccess"
      [32m+[0m[0m role       = "ec2-ssm-role"
    }

[1m  # aws_iam_role_policy_attachment.ecs_instance_cloudwatch_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ecs_instance_cloudwatch_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
      [32m+[0m[0m role       = "ecs-instance-role"
    }

[1m  # aws_iam_role_policy_attachment.ecs_instance_ecr_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ecs_instance_ecr_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      [32m+[0m[0m role       = "ecs-instance-role"
    }

[1m  # aws_iam_role_policy_attachment.ecs_instance_ecs_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ecs_instance_ecs_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
      [32m+[0m[0m role       = "ecs-instance-role"
    }

[1m  # aws_iam_role_policy_attachment.ecs_instance_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ecs_instance_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
      [32m+[0m[0m role       = "ecs-instance-role"
    }

[1m  # aws_iam_role_policy_attachment.s3_managed_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "s3_managed_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AdministratorAccess"
      [32m+[0m[0m role       = "ec2-s3-role"
    }

[1m  # aws_iam_role_policy_attachment.ssm_managed_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ssm_managed_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      [32m+[0m[0m role       = "ec2-ssm-role"
    }

[1mPlan:[0m 14 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m aws_ident                             = "390403858393"
  [32m+[0m[0m iam_ec2_s3_role                       = {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m description           = [90mnull[0m[0m
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m inline_policy         = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "ec2-s3-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m permissions_boundary  = [90mnull[0m[0m
      [32m+[0m[0m tags                  = [90mnull[0m[0m
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m Environment = "Projeto-bia"
          [32m+[0m[0m Management  = "Terraform"
          [32m+[0m[0m Owner       = "Junior_Fernandes"
          [32m+[0m[0m Terraform   = "true"
        }
      [32m+[0m[0m unique_id             = (known after apply)
    }
  [32m+[0m[0m iam_ecs_atach_role                    = (known after apply)
  [32m+[0m[0m iam_instance_profile_ssm_profile_name = {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "ec2-ssm-profile"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m role        = "ec2-ssm-role"
      [32m+[0m[0m tags        = [90mnull[0m[0m
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m Environment = "Projeto-bia"
          [32m+[0m[0m Management  = "Terraform"
          [32m+[0m[0m Owner       = "Junior_Fernandes"
          [32m+[0m[0m Terraform   = "true"
        }
      [32m+[0m[0m unique_id   = (known after apply)
    }
  [32m+[0m[0m iam_s3_atach_role                     = {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AdministratorAccess"
      [32m+[0m[0m role       = "ec2-s3-role"
    }
  [32m+[0m[0m iam_s3_profile                        = {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "ec2-s3-profile"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m role        = "ec2-s3-role"
      [32m+[0m[0m tags        = [90mnull[0m[0m
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m Environment = "Projeto-bia"
          [32m+[0m[0m Management  = "Terraform"
          [32m+[0m[0m Owner       = "Junior_Fernandes"
          [32m+[0m[0m Terraform   = "true"
        }
      [32m+[0m[0m unique_id   = (known after apply)
    }
  [32m+[0m[0m iam_ssm_profile                       = {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "ec2-ssm-profile"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m role        = "ec2-ssm-role"
      [32m+[0m[0m tags        = [90mnull[0m[0m
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m Environment = "Projeto-bia"
          [32m+[0m[0m Management  = "Terraform"
          [32m+[0m[0m Owner       = "Junior_Fernandes"
          [32m+[0m[0m Terraform   = "true"
        }
      [32m+[0m[0m unique_id   = (known after apply)
    }
  [32m+[0m[0m ssm_atach_role                        = {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      [32m+[0m[0m role       = "ec2-ssm-role"
    }
  [32m+[0m[0m ssm_role                              = (known after apply)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: plan.out

To perform exactly these actions, run the following command to apply:
    terraform apply "plan.out"
/home/junior/Dados/FormacaoAWS/Terraform/3-RDS
[0m[1mdata.terraform_remote_state.vpc: Reading...[0m[0m
[0m[1mdata.terraform_remote_state.sg: Reading...[0m[0m
[0m[1mdata.terraform_remote_state.sg: Read complete after 1s[0m
[0m[1mdata.terraform_remote_state.vpc: Read complete after 1s[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_db_instance.db-Projeto[0m will be created
[0m  [32m+[0m[0m resource "aws_db_instance" "db-Projeto" {
      [32m+[0m[0m address                               = (known after apply)
      [32m+[0m[0m allocated_storage                     = 20
      [32m+[0m[0m apply_immediately                     = false
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade            = true
      [32m+[0m[0m availability_zone                     = (known after apply)
      [32m+[0m[0m backup_retention_period               = (known after apply)
      [32m+[0m[0m backup_target                         = (known after apply)
      [32m+[0m[0m backup_window                         = (known after apply)
      [32m+[0m[0m ca_cert_identifier                    = (known after apply)
      [32m+[0m[0m character_set_name                    = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m db_name                               = "bia"
      [32m+[0m[0m db_subnet_group_name                  = "formacao_aws-vpc"
      [32m+[0m[0m dedicated_log_volume                  = false
      [32m+[0m[0m delete_automated_backups              = true
      [32m+[0m[0m deletion_protection                   = false
      [32m+[0m[0m domain_fqdn                           = (known after apply)
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "postgres"
      [32m+[0m[0m engine_lifecycle_support              = (known after apply)
      [32m+[0m[0m engine_version                        = "16.3"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m hosted_zone_id                        = (known after apply)
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identifier                            = "bia"
      [32m+[0m[0m identifier_prefix                     = (known after apply)
      [32m+[0m[0m instance_class                        = "db.t3.micro"
      [32m+[0m[0m iops                                  = (known after apply)
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m latest_restorable_time                = (known after apply)
      [32m+[0m[0m license_model                         = (known after apply)
      [32m+[0m[0m listener_endpoint                     = (known after apply)
      [32m+[0m[0m maintenance_window                    = (known after apply)
      [32m+[0m[0m master_user_secret                    = (known after apply)
      [32m+[0m[0m master_user_secret_kms_key_id         = (known after apply)
      [32m+[0m[0m monitoring_interval                   = 0
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m multi_az                              = false
      [32m+[0m[0m nchar_character_set_name              = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m option_group_name                     = (known after apply)
      [32m+[0m[0m parameter_group_name                  = (known after apply)
      [32m+[0m[0m password                              = (sensitive value)
      [32m+[0m[0m performance_insights_enabled          = false
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m publicly_accessible                   = true
      [32m+[0m[0m replica_mode                          = (known after apply)
      [32m+[0m[0m replicas                              = (known after apply)
      [32m+[0m[0m resource_id                           = (known after apply)
      [32m+[0m[0m skip_final_snapshot                   = true
      [32m+[0m[0m snapshot_identifier                   = (known after apply)
      [32m+[0m[0m status                                = (known after apply)
      [32m+[0m[0m storage_throughput                    = (known after apply)
      [32m+[0m[0m storage_type                          = (known after apply)
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "Environment" = "Desafio LABS 2.0_bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Primeiro_Desafio-bia"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Environment" = "Desafio LABS 2.0_bia"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Primeiro_Desafio-bia"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m timezone                              = (known after apply)
      [32m+[0m[0m username                              = "postgres"
      [32m+[0m[0m vpc_security_group_ids                = [
          [32m+[0m[0m "sg-09b462e88aa0f0480",
        ]
    }

[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m db_arn           = (known after apply)
  [32m+[0m[0m db_db_address    = (known after apply)
  [32m+[0m[0m db_db_engine     = "postgres"
  [32m+[0m[0m db_db_id         = (known after apply)
  [32m+[0m[0m db_db_identifier = "bia"
  [32m+[0m[0m db_db_name       = "bia"
  [32m+[0m[0m db_db_password   = (sensitive value)
  [32m+[0m[0m db_db_port       = (known after apply)
  [32m+[0m[0m db_db_username   = "postgres"
  [32m+[0m[0m db_end_point     = (known after apply)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: plan.out

To perform exactly these actions, run the following command to apply:
    terraform apply "plan.out"
/home/junior/Dados/FormacaoAWS/Terraform/3a-Orquestrador
[0m[1mdata.terraform_remote_state.sg: Reading...[0m[0m
[0m[1mdata.terraform_remote_state.rds: Reading...[0m[0m
[0m[1mdata.terraform_remote_state.vpc: Reading...[0m[0m
[0m[1mdata.terraform_remote_state.iam: Reading...[0m[0m
[0m[1mdata.aws_ami.ubuntu_linux_2204: Reading...[0m[0m
[0m[1mdata.aws_ami.amazon_linux: Reading...[0m[0m
[0m[1mdata.aws_ami.ubuntu_linux: Reading...[0m[0m
[0m[1mdata.terraform_remote_state.sg: Read complete after 3s[0m
[0m[1mdata.terraform_remote_state.rds: Read complete after 3s[0m
[0m[1mdata.terraform_remote_state.iam: Read complete after 3s[0m
[0m[1mdata.terraform_remote_state.vpc: Read complete after 3s[0m
[0m[1mdata.aws_ami.ubuntu_linux_2204: Read complete after 4s [id=ami-0f9de6e2d2f067fca][0m
[0m[1mdata.aws_ami.ubuntu_linux: Read complete after 4s [id=ami-084568db4383264d4][0m
[0m[1mdata.aws_ami.amazon_linux: Read complete after 5s [id=ami-01f5a0b78d6089704][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_instance.ec2_bia_porteiro[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "ec2_bia_porteiro" {
      [32m+[0m[0m ami                                  = "ami-01f5a0b78d6089704"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "ec2-ssm-profile"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t3.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "aws-key-terraform"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = "subnet-0d20ddec38c7c9e04"
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Environment" = "Projeto"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Bia Porteiro"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Environment" = "Projeto"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Name"        = "Bia Porteiro"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "fbd701ca22e8e4735ab0a0510d73aa65ceb23fef"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = [
          [32m+[0m[0m "sg-09c51df33bf3264a5",
        ]

      [32m+[0m[0m capacity_reservation_specification (known after apply)

      [32m+[0m[0m cpu_options (known after apply)

      [32m+[0m[0m ebs_block_device (known after apply)

      [32m+[0m[0m enclave_options (known after apply)

      [32m+[0m[0m ephemeral_block_device (known after apply)

      [32m+[0m[0m instance_market_options (known after apply)

      [32m+[0m[0m maintenance_options (known after apply)

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface (known after apply)

      [32m+[0m[0m private_dns_name_options (known after apply)

      [32m+[0m[0m root_block_device (known after apply)
    }

[1m  # aws_key_pair.deployer[0m will be created
[0m  [32m+[0m[0m resource "aws_key_pair" "deployer" {
      [32m+[0m[0m arn             = (known after apply)
      [32m+[0m[0m fingerprint     = (known after apply)
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m key_name        = "aws-key-terraform"
      [32m+[0m[0m key_name_prefix = (known after apply)
      [32m+[0m[0m key_pair_id     = (known after apply)
      [32m+[0m[0m key_type        = (known after apply)
      [32m+[0m[0m public_key      = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCwvYmZfLxQagqrjySKDoquHWI1s+HgSRDzmxAhRhugrUoZsdVuFqc4J0AaW/YBzv4GtRZPIXXyhXYpSMXLgeK+iJX0mos83LP8RQW/j+0ClcoiRVP8FJaVmkD9+vOiVs7gD+5Ztpt9F7ADX6YJ9X3iJewoAY24mDlN+h1kwo2cz/iD62cfTMO2ujz9hpU62AmezLJo4qLXkEM2mSK0M6ch7p+Mh721OuKBktbyGP+xkQOYHff0mSG+9Yc9uMeQFLEkxjGJdR0uoZfITgDsDsFuNS1Hv8df5BJYI8ot9cO6hJqUapX92f30Mc0HJz22Zj+iht+Abeiwy2DFIreKQX+JYS34T7udWA1Z6Z/Z0Ga/BWsLVN6/LFl4fMJWC+1BfychBGvXBJD44/3EVCku+geXkVnWsFFDci4X5Gc5MDVRM1tfgJa4T3UYMS4BzTNejprgAO8bXKGWt5mhld9Uhr8Y/5lfzZspvl69g/DaWyAjilekqk8oz09ARPUeiivMy69ZsyKQoogLDIc4ONEnrxuHQD+aw7KUlTQdsf8O9dYkJT2nsEeKCQCfRDNgSgTjn7+etBHAisLObNNiegMi3tafL/sdA1sYnPIEyXainVSUwdx+Xgt4Lf9JlV6OsIyGwkGdCTj6GDTE52RclUD28JiUuAqUeDB8IXQRtcbWFICZ5w== junior@junior-Inspiron-15-5510"
      [32m+[0m[0m tags_all        = {
          [32m+[0m[0m "Environment" = "Projeto"
          [32m+[0m[0m "Management"  = "Terraform"
          [32m+[0m[0m "Terraform"   = "true"
        }
    }

[1mPlan:[0m 2 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m EC2_bia_dev_sg_ids = [
      [32m+[0m[0m "sg-09c51df33bf3264a5",
    ]
  [32m+[0m[0m ami_amazon         = {
      [32m+[0m[0m architecture          = "x86_64"
      [32m+[0m[0m arn                   = "arn:aws:ec2:us-east-1::image/ami-01f5a0b78d6089704"
      [32m+[0m[0m block_device_mappings = [
          [32m+[0m[0m {
              [32m+[0m[0m device_name  = "/dev/xvda"
              [32m+[0m[0m ebs          = {
                  [32m+[0m[0m delete_on_termination = "true"
                  [32m+[0m[0m encrypted             = "false"
                  [32m+[0m[0m iops                  = "0"
                  [32m+[0m[0m snapshot_id           = "snap-0d7e5f888fca4aaa6"
                  [32m+[0m[0m throughput            = "0"
                  [32m+[0m[0m volume_size           = "8"
                  [32m+[0m[0m volume_type           = "gp2"
                }
              [32m+[0m[0m no_device    = ""
              [32m+[0m[0m virtual_name = ""
            },
        ]
      [32m+[0m[0m boot_mode             = ""
      [32m+[0m[0m creation_date         = "2025-03-05T01:36:07.000Z"
      [32m+[0m[0m deprecation_time      = "2025-07-01T00:00:00.000Z"
      [32m+[0m[0m description           = "Amazon Linux 2 AMI 2.0.20250305.0 x86_64 HVM gp2"
      [32m+[0m[0m ena_support           = true
      [32m+[0m[0m executable_users      = [90mnull[0m[0m
      [32m+[0m[0m filter                = [
          [32m+[0m[0m {
              [32m+[0m[0m name   = "name"
              [32m+[0m[0m values = [
                  [32m+[0m[0m "amzn2-ami-hvm-*-x86_64-gp2",
                ]
            },
          [32m+[0m[0m {
              [32m+[0m[0m name   = "virtualization-type"
              [32m+[0m[0m values = [
                  [32m+[0m[0m "hvm",
                ]
            },
        ]
      [32m+[0m[0m hypervisor            = "xen"
      [32m+[0m[0m id                    = "ami-01f5a0b78d6089704"
      [32m+[0m[0m image_id              = "ami-01f5a0b78d6089704"
      [32m+[0m[0m image_location        = "amazon/amzn2-ami-hvm-2.0.20250305.0-x86_64-gp2"
      [32m+[0m[0m image_owner_alias     = "amazon"
      [32m+[0m[0m image_type            = "machine"
      [32m+[0m[0m imds_support          = ""
      [32m+[0m[0m include_deprecated    = false
      [32m+[0m[0m kernel_id             = ""
      [32m+[0m[0m most_recent           = true
      [32m+[0m[0m name                  = "amzn2-ami-hvm-2.0.20250305.0-x86_64-gp2"
      [32m+[0m[0m name_regex            = [90mnull[0m[0m
      [32m+[0m[0m owner_id              = "137112412989"
      [32m+[0m[0m owners                = [
          [32m+[0m[0m "amazon",
        ]
      [32m+[0m[0m platform              = ""
      [32m+[0m[0m platform_details      = "Linux/UNIX"
      [32m+[0m[0m product_codes         = []
      [32m+[0m[0m public                = true
      [32m+[0m[0m ramdisk_id            = ""
      [32m+[0m[0m root_device_name      = "/dev/xvda"
      [32m+[0m[0m root_device_type      = "ebs"
      [32m+[0m[0m root_snapshot_id      = "snap-0d7e5f888fca4aaa6"
      [32m+[0m[0m sriov_net_support     = "simple"
      [32m+[0m[0m state                 = "available"
      [32m+[0m[0m state_reason          = {
          [32m+[0m[0m code    = "UNSET"
          [32m+[0m[0m message = "UNSET"
        }
      [32m+[0m[0m tags                  = {}
      [32m+[0m[0m timeouts              = [90mnull[0m[0m
      [32m+[0m[0m tpm_support           = ""
      [32m+[0m[0m usage_operation       = "RunInstances"
      [32m+[0m[0m virtualization_type   = "hvm"
    }
  [32m+[0m[0m ami_ubuntu         = {
      [32m+[0m[0m architecture          = "x86_64"
      [32m+[0m[0m arn                   = "arn:aws:ec2:us-east-1::image/ami-084568db4383264d4"
      [32m+[0m[0m block_device_mappings = [
          [32m+[0m[0m {
              [32m+[0m[0m device_name  = "/dev/sda1"
              [32m+[0m[0m ebs          = {
                  [32m+[0m[0m delete_on_termination = "true"
                  [32m+[0m[0m encrypted             = "false"
                  [32m+[0m[0m iops                  = "0"
                  [32m+[0m[0m snapshot_id           = "snap-0edbe0f6601b2861c"
                  [32m+[0m[0m throughput            = "0"
                  [32m+[0m[0m volume_size           = "8"
                  [32m+[0m[0m volume_type           = "gp3"
                }
              [32m+[0m[0m no_device    = ""
              [32m+[0m[0m virtual_name = ""
            },
          [32m+[0m[0m {
              [32m+[0m[0m device_name  = "/dev/sdb"
              [32m+[0m[0m ebs          = {}
              [32m+[0m[0m no_device    = ""
              [32m+[0m[0m virtual_name = "ephemeral0"
            },
          [32m+[0m[0m {
              [32m+[0m[0m device_name  = "/dev/sdc"
              [32m+[0m[0m ebs          = {}
              [32m+[0m[0m no_device    = ""
              [32m+[0m[0m virtual_name = "ephemeral1"
            },
        ]
      [32m+[0m[0m boot_mode             = "uefi-preferred"
      [32m+[0m[0m creation_date         = "2025-03-05T09:18:37.000Z"
      [32m+[0m[0m deprecation_time      = "2027-03-05T09:18:37.000Z"
      [32m+[0m[0m description           = "Canonical, Ubuntu, 24.04, amd64 noble image"
      [32m+[0m[0m ena_support           = true
      [32m+[0m[0m executable_users      = [90mnull[0m[0m
      [32m+[0m[0m filter                = [
          [32m+[0m[0m {
              [32m+[0m[0m name   = "name"
              [32m+[0m[0m values = [
                  [32m+[0m[0m "ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-amd64-server-*",
                ]
            },
          [32m+[0m[0m {
              [32m+[0m[0m name   = "virtualization-type"
              [32m+[0m[0m values = [
                  [32m+[0m[0m "hvm",
                ]
            },
        ]
      [32m+[0m[0m hypervisor            = "xen"
      [32m+[0m[0m id                    = "ami-084568db4383264d4"
      [32m+[0m[0m image_id              = "ami-084568db4383264d4"
      [32m+[0m[0m image_location        = "amazon/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-amd64-server-20250305"
      [32m+[0m[0m image_owner_alias     = "amazon"
      [32m+[0m[0m image_type            = "machine"
      [32m+[0m[0m imds_support          = "v2.0"
      [32m+[0m[0m include_deprecated    = false
      [32m+[0m[0m kernel_id             = ""
      [32m+[0m[0m most_recent           = true
      [32m+[0m[0m name                  = "ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-amd64-server-20250305"
      [32m+[0m[0m name_regex            = [90mnull[0m[0m
      [32m+[0m[0m owner_id              = "099720109477"
      [32m+[0m[0m owners                = [
          [32m+[0m[0m "099720109477",
        ]
      [32m+[0m[0m platform              = ""
      [32m+[0m[0m platform_details      = "Linux/UNIX"
      [32m+[0m[0m product_codes         = []
      [32m+[0m[0m public                = true
      [32m+[0m[0m ramdisk_id            = ""
      [32m+[0m[0m root_device_name      = "/dev/sda1"
      [32m+[0m[0m root_device_type      = "ebs"
      [32m+[0m[0m root_snapshot_id      = "snap-0edbe0f6601b2861c"
      [32m+[0m[0m sriov_net_support     = "simple"
      [32m+[0m[0m state                 = "available"
      [32m+[0m[0m state_reason          = {
          [32m+[0m[0m code    = "UNSET"
          [32m+[0m[0m message = "UNSET"
        }
      [32m+[0m[0m tags                  = {}
      [32m+[0m[0m timeouts              = [90mnull[0m[0m
      [32m+[0m[0m tpm_support           = ""
      [32m+[0m[0m usage_operation       = "RunInstances"
      [32m+[0m[0m virtualization_type   = "hvm"
    }
  [32m+[0m[0m ami_ubuntu_2204    = {
      [32m+[0m[0m architecture          = "x86_64"
      [32m+[0m[0m arn                   = "arn:aws:ec2:us-east-1::image/ami-0f9de6e2d2f067fca"
      [32m+[0m[0m block_device_mappings = [
          [32m+[0m[0m {
              [32m+[0m[0m device_name  = "/dev/sda1"
              [32m+[0m[0m ebs          = {
                  [32m+[0m[0m delete_on_termination = "true"
                  [32m+[0m[0m encrypted             = "false"
                  [32m+[0m[0m iops                  = "0"
                  [32m+[0m[0m snapshot_id           = "snap-0706476dde26d8e82"
                  [32m+[0m[0m throughput            = "0"
                  [32m+[0m[0m volume_size           = "8"
                  [32m+[0m[0m volume_type           = "gp2"
                }
              [32m+[0m[0m no_device    = ""
              [32m+[0m[0m virtual_name = ""
            },
          [32m+[0m[0m {
              [32m+[0m[0m device_name  = "/dev/sdb"
              [32m+[0m[0m ebs          = {}
              [32m+[0m[0m no_device    = ""
              [32m+[0m[0m virtual_name = "ephemeral0"
            },
          [32m+[0m[0m {
              [32m+[0m[0m device_name  = "/dev/sdc"
              [32m+[0m[0m ebs          = {}
              [32m+[0m[0m no_device    = ""
              [32m+[0m[0m virtual_name = "ephemeral1"
            },
        ]
      [32m+[0m[0m boot_mode             = "uefi-preferred"
      [32m+[0m[0m creation_date         = "2025-03-05T03:14:49.000Z"
      [32m+[0m[0m deprecation_time      = "2027-03-05T03:14:49.000Z"
      [32m+[0m[0m description           = "Canonical, Ubuntu, 22.04, amd64 jammy image"
      [32m+[0m[0m ena_support           = true
      [32m+[0m[0m executable_users      = [90mnull[0m[0m
      [32m+[0m[0m filter                = [
          [32m+[0m[0m {
              [32m+[0m[0m name   = "name"
              [32m+[0m[0m values = [
                  [32m+[0m[0m "ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*",
                ]
            },
          [32m+[0m[0m {
              [32m+[0m[0m name   = "virtualization-type"
              [32m+[0m[0m values = [
                  [32m+[0m[0m "hvm",
                ]
            },
        ]
      [32m+[0m[0m hypervisor            = "xen"
      [32m+[0m[0m id                    = "ami-0f9de6e2d2f067fca"
      [32m+[0m[0m image_id              = "ami-0f9de6e2d2f067fca"
      [32m+[0m[0m image_location        = "amazon/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20250305"
      [32m+[0m[0m image_owner_alias     = "amazon"
      [32m+[0m[0m image_type            = "machine"
      [32m+[0m[0m imds_support          = ""
      [32m+[0m[0m include_deprecated    = false
      [32m+[0m[0m kernel_id             = ""
      [32m+[0m[0m most_recent           = true
      [32m+[0m[0m name                  = "ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20250305"
      [32m+[0m[0m name_regex            = [90mnull[0m[0m
      [32m+[0m[0m owner_id              = "099720109477"
      [32m+[0m[0m owners                = [
          [32m+[0m[0m "099720109477",
        ]
      [32m+[0m[0m platform              = ""
      [32m+[0m[0m platform_details      = "Linux/UNIX"
      [32m+[0m[0m product_codes         = []
      [32m+[0m[0m public                = true
      [32m+[0m[0m ramdisk_id            = ""
      [32m+[0m[0m root_device_name      = "/dev/sda1"
      [32m+[0m[0m root_device_type      = "ebs"
      [32m+[0m[0m root_snapshot_id      = "snap-0706476dde26d8e82"
      [32m+[0m[0m sriov_net_support     = "simple"
      [32m+[0m[0m state                 = "available"
      [32m+[0m[0m state_reason          = {
          [32m+[0m[0m code    = "UNSET"
          [32m+[0m[0m message = "UNSET"
        }
      [32m+[0m[0m tags                  = {}
      [32m+[0m[0m timeouts              = [90mnull[0m[0m
      [32m+[0m[0m tpm_support           = ""
      [32m+[0m[0m usage_operation       = "RunInstances"
      [32m+[0m[0m virtualization_type   = "hvm"
    }
  [32m+[0m[0m autor              = "Junior Fernandes"
  [32m+[0m[0m cliente            = "BIA"
  [32m+[0m[0m id_instancia       = (known after apply)
  [32m+[0m[0m private_ip         = (known after apply)
  [32m+[0m[0m projeto            = "Formacao AWS"
  [32m+[0m[0m public_ip          = (known after apply)
  [32m+[0m[0m regiao             = "us-east-1"
  [32m+[0m[0m shortnameid        = "bia"
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: plan.out

To perform exactly these actions, run the following command to apply:
    terraform apply "plan.out"
/home/junior/Dados/FormacaoAWS/Terraform/4-Bucket
[0m[1m[32m
Apply complete! Resources: 0 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mwebsite_url = "crfjunior-bia-static.s3-website-us-east-1.amazonaws.com"
/home/junior/Dados/FormacaoAWS/Terraform/5-ECR
[0m[1mdata.terraform_remote_state.vpc: Reading...[0m[0m
[0m[1mdata.terraform_remote_state.sg: Reading...[0m[0m
[0m[1mdata.terraform_remote_state.sg: Read complete after 2s[0m
[0m[1mdata.terraform_remote_state.vpc: Read complete after 2s[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_ecr_repository.repository-bia[0m will be created
[0m  [32m+[0m[0m resource "aws_ecr_repository" "repository-bia" {
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m image_tag_mutability = "MUTABLE"
      [32m+[0m[0m name                 = "bia"
      [32m+[0m[0m registry_id          = (known after apply)
      [32m+[0m[0m repository_url       = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)

      [32m+[0m[0m image_scanning_configuration {
          [32m+[0m[0m scan_on_push = true
        }
    }

[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m ecr_repository_arn         = (known after apply)
  [32m+[0m[0m ecr_repository_id          = (known after apply)
  [32m+[0m[0m ecr_repository_name        = "bia"
  [32m+[0m[0m ecr_repository_registry_id = (known after apply)
  [32m+[0m[0m ecr_repository_tags_all    = (known after apply)
  [32m+[0m[0m ecr_repository_url         = (known after apply)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: plan.out

To perform exactly these actions, run the following command to apply:
    terraform apply "plan.out"
